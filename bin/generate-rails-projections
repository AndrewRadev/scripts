#! /usr/bin/env ruby

# Tim Pope's "projectionist" and "rails.vim" plugins use a file usually named
# ".projections.json".
#
# This script is supposed to be run in a rails app's root. It tries to find any
# additional concepts to create commands for (like "jobs", "decorators", etc.),
# generate the relevant json for this file and output it to stdout. It can then
# easily be piped to .projections.json and then edited.

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  gem 'activesupport', require: false
end

require 'find'
require 'json'
require 'active_support/inflector'

if not File.directory?('app')
  puts "Doesn't look like a rails project"
  exit 1
end

builtins = %w(assets controllers helpers mailers models views)

# Check if we should add to existing projections
if File.exists?('.projections.json') && File.size('.projections.json') > 0
  projections = JSON.load(File.read('.projections.json'))
else
  projections = {}
end

Dir['app/*'].each do |path|
  dir = path.gsub(/^app\//, '')
  next if builtins.include? dir

  type = dir.singularize

  if type == dir
    # wasn't plural, ignore
    next
  end

  # if there are already files in there, do they end in `_type.rb`?
  if Dir["app/#{dir}/*_#{type}.rb"].empty?
    glob = "app/#{dir}/*.rb"
  else
    glob = "app/#{dir}/*_#{type}.rb"
  end

  if not projections.key? glob
    projections[glob] = {
      'type'      => type,
      'alternate' => "spec/#{dir}/{}_#{type}_spec.rb",
    }
  end
end

puts JSON.pretty_generate(projections)
