#! /usr/bin/env ruby

# Tim Pope's "projectionist" and "rails.vim" plugins use a file usually named
# ".projections.json".
#
# This script is supposed to be run in a rails app's root. It tries to find any
# additional concepts to create commands for (like "jobs", "decorators", etc.),
# generate the relevant json for this file and output it to stdout. It can then
# easily be piped to .projections.json and then edited.

require 'find'
require 'json'
require 'active_support/inflector'

if not File.directory?('app')
  puts "Doesn't look like a rails project"
  exit 1
end

builtins = %w(assets controllers helpers mailers models views)

# Check if we should add to existing projections
if File.exists?('.projections.json')
  projections = JSON.load(File.read('.projections.json'))
else
  projections = {}
end

Dir['app/*'].each do |path|
  dir = path.gsub(/^app\//, '')
  next if builtins.include? dir

  command_name = dir.singularize

  if command_name == dir
    # wasn't plural, ignore
    next
  end

  glob = "app/#{dir}/*.rb"
  if not projections.key? glob
    projections[glob] = {
      'type'      => command_name,
      'alternate' => "spec/#{dir}/{}_spec.rb",
    }
  end
end

# see if we have factories
factory_dirs = `find spec/ -path '*factories'`.strip.split("\n")

glob = "#{factory_dirs.first}/*.rb"
if not factory_dirs.empty? and not projections.key? glob
  projections[glob] = {'command' => 'factory'}
end

puts JSON.pretty_generate(projections)
